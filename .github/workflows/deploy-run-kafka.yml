name: 'Deploy kafka to GCE'

on:
  push:
    paths: 
    - 'kafka/**'
    branches: [ "main" ]
  pull_request:
    paths: 
    - 'kafka/**'
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  kafka:
    name: 'kafka'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        working-directory: ./kafka
        shell: bash
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use TFVars
      run: |
        TFVARS_FILE=${GITHUB_WORKSPACE}/terraform/terraform.tfvars
        GCP_PROJECT=$(grep 'gcp_project' $TFVARS_FILE | awk -F= '{print $2}' | tr -d '[:space:]')
        KAFKA_INSTANCE=$(grep 'kafka_instance_name' $TFVARS_FILE | awk -F= '{print $2}' | tr -d '[:space:]')
        KAFKA_INSTANCE_ZONE=$(grep 'kafka_instance_zone' $TFVARS_FILE | awk -F= '{print $2}' | tr -d '[:space:]')

        echo "GCP_PROJECT: $GCP_PROJECT"
        echo "KAFKA_INSTANCE: $KAFKA_INSTANCE"
        echo "KAFKA_INSTANCE_ZONE" : $KAFKA_INSTANCE_ZONE
    
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Generate SSH key pair
      run: |
        ssh-keygen -t rsa -b 4096 -C "ilhamaulanap@gmail.com" -N "" -f ~/.ssh/gcp_key
        chmod 600 ~/.ssh/gcp_key

    - name: Copy public key to clipboard
      run: |
        cat ~/.ssh/gcp_key.pub
        echo "Public key copied to clipboard. Add this to your Compute Engine instance's metadata or authorized_keys."

    - name: SSH into GCP Instance
      run: |
         gcloud compute ssh $KAFKA_INSTANCE \
          --zone $KAFKA_INSTANCE_ZONE \
          --project $GCP_PROJECT \
          --quiet \
          --ssh-key-file=~/.ssh/gcp_key \
          --command "git clone https://github.com/${{ github.repository }}.git && \
                      cd \$(basename \"${{ github.repository }}\")/kafka && \
                      sudo apt-get update && \
                      sudo apt-get install -y docker.io && \
                      docker-compose build && \
                      docker-compose up -d > /tmp/script_output.log 2>&1"
